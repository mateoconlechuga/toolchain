name: Win/Mac/Linux

on:
  push:
    tags:
      - v* # push events versioned tags
    branches-ignore:
      - gh-pages
  pull_request:
    branches:
      - master

env:
  AUTOTESTER_LIBS_GROUP: ${{github.workspace}}/toolchain/clibs.8xg
  AUTOTESTER_PATH: ${{github.workspace}}/CEmu/tests/autotester
  AUTOTESTER_ROM: ${{github.workspace}}/secrets/84pce_515_53.rom
  CEDEV: ${{github.workspace}}/CEdev
  CEDEV_BIN: ${{github.workspace}}/CEdev/bin
  CEDEV_EXAMPLES: ${{github.workspace}}/CEdev/examples
  CEDEV_TEST: ${{github.workspace}}/toolchain/test
  CEMU_PATH: ${{github.workspace}}/CEmu
  FASMG_DOMAIN: https://flatassembler.net
  FASMG_PATH: ${{github.workspace}}/fasmg
  HOST_DOMAIN: https://jacobly.com
  SECRETS_PATH: ${{github.workspace}}/secrets
  TOOLCHAIN_PATH: ${{github.workspace}}/toolchain

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu, macos, windows]
        include:
          - nul: /dev/null
          - runs-on: macos
            fasmg: /source/macos/x64/fasmg
          - runs-on: windows
            fasmg: /fasmg.exe
            env: "env:"
            exe: .exe
            nul: nul
          - runs-on: ubuntu
            fasmg: /fasmg.x64
    runs-on: ${{matrix.runs-on}}-latest
    steps:
      - name: Prepare Build Environment
        run: cmake -E echo >> $${{matrix.env}}GITHUB_PATH ${{env.CEDEV_BIN}}

      - name: Download ez80-clang
        id: ez80-clang
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: ${{env.HOST_DOMAIN}}/artifact?repo=llvm-project&branch=z80&file=ez80-clang${{matrix.exe}}-${{runner.os}}Release
      - name: Extract ez80-clang
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ${{steps.ez80-clang.outputs.file-path}}
          pathTarget: ${{env.CEDEV_BIN}}

      - name: Download Fasmg Download Page
        id: fasmg-download
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: ${{env.FASMG_DOMAIN}}/download.php
      - name: Parse Fasmg Download Page
        id: fasmg-url
        uses: QwerMike/xpath-action@v1
        with:
          filename: ${{steps.fasmg-download.outputs.file-path}}
          expression: //a[starts-with(text(),"flat assembler g ")]/@href
      - name: Extract Fasmg Url
        run: cmake -E echo >> $${{matrix.env}}GITHUB_ENV ${{steps.fasmg-url.outputs.result}}
      - name: Download Fasmg
        id: fasmg
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: ${{env.FASMG_DOMAIN}}/${{env.href}}
      - name: Extract Fasmg
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ${{steps.fasmg.outputs.file-path}}
          pathTarget: ${{env.FASMG_PATH}}
      - name: Setup Fasmg
        run: cmake -E copy fasmg${{matrix.fasmg}} ${{env.CEDEV_BIN}}/fasmg${{matrix.exe}}

      - name: Make Binaries Executable
        if: runner.os != 'Windows'
        run: chmod +x ${{env.CEDEV_BIN}}/*
      - name: Test Build Dependencies
        run: |
          ez80-clang --version
          fasmg ${{matrix.nul}} ${{matrix.nul}}

      - name: Checkout Toolchain
        uses: actions/checkout@v2.3.4
        with:
          path: ${{env.TOOLCHAIN_PATH}}
          submodules: recursive
          persist-credentials: false
      - name: Build Toolchain
        run: make -j4 -C ${{env.TOOLCHAIN_PATH}} V=1
      - name: Install Toolchain
        env:
          PREFIX: ${{github.workspace}}
        run: make -j4 -C ${{env.TOOLCHAIN_PATH}} install release release-libs V=1

      - name: Tar toolchain
        if: runner.os != 'Windows'
        run: |
          chmod +x ${{env.CEDEV_BIN}}/*
          tar -C ${{env.CEDEV}}/.. -czvf CEdev-${{runner.os}}.tar.gz CEdev

      - name: Upload Linux/MacOS CEdev
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: CEdev-${{runner.os}}
          path: CEdev-${{runner.os}}.tar.gz

      - name: Upload Windows CEdev
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: CEdev-${{runner.os}}
          path: ${{env.CEDEV}}

  deploy-nightly:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Download CEdev
        if: runner.os == 'Windows'
        uses: actions/download-artifact@v2
        with:
          name: CEdev-${{runner.os}}
          path: ${{env.CEDEV}}
      - name: Download CEdev
        if: runner.os != 'Windows'
        uses: actions/download-artifact@v2
        with:
          name: CEdev-${{runner.os}}
          path: ${{github.workspace}}

      - name: Archive Release
        if: runner.os == 'Linux'
        run: mv CEdev-${{runner.os}}.tar.gz linux_CEdev_nightly.tar.gz
      - name: Archive Release
        if: runner.os == 'Windows'
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'windows_CEdev_nightly.zip'
          directory: ${{env.CEDEV}}

       - name: Update nightly release
         uses: pyTooling/Actions/releaser@main
         with:
           tag: nightly
           rm: true
           token: ${{secrets.GITHUB_TOKEN}}
          files: |
            windows_CEdev_nightly.tar.gz
            linux_CEdev_nightly.tar.gz
